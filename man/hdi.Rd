% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hdi.R
\name{hdi}
\alias{hdi}
\alias{hdi.default}
\alias{hdi_from_grid}
\title{Compute highest density intervals}
\usage{
hdi(object, prob = 0.95, pars = NULL, regex_pars, ...)

\method{hdi}{default}(object, prob = 0.95, pars = NULL,
  regex_pars = NULL, ...)

hdi_from_grid(object, pars = NULL, prob = 0.95,
  posterior = "posterior")
}
\arguments{
\item{object}{an object describing a posterior distribution}

\item{prob}{the desired mass of the HDI region.}

\item{pars}{a vector of parameter names}

\item{regex_pars}{a regular expression for selecting parameter names}
}
\value{
a data frame with 1 row per paramter and variables
\itemize{
\item \code{lo} lower end of hdi
\item \code{hi} higher end of hdi
\item \code{prob} is the total probability
}
}
\description{
Compute highest density intervals
}
\examples{
# Determining HDI of a beta(30,12) distribution
# Create a grid
Grid <-
  expand.grid(x = seq(0, 1, length.out = 201)) \%>\%
    mutate(posterior = dbeta(x, 30, 12))
hdi_from_grid(Grid, "x", prob = 0.9)
hdi(mosaic::resample(Grid, prob = Grid$posterior, size = 10000)$x, prob = 0.9)
x <- rnorm(25, 3, 2)  # some random data
Grid <-
  expand.grid(
    mean = seq(0, 10, length.out = 101),
    sd   = seq(0, 10, length.out = 101)
    ) \%>\%
    mutate(
      prior = 1,
      loglik =
        purrr::map2_dbl(mean, sd, function(a, b) sum(dnorm(x, a, b, log = TRUE)), x = x),
      likelihood = exp(loglik),
      posterior = prior * likelihood
    )
 hdi_from_grid(Grid, params = c("mean", "sd"))

}
